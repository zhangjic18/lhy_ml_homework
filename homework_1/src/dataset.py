import numpy as np
import torch
from torch.utils.data import Dataset
import pandas as pd


class covid_dataset(Dataset):
    def __init__(self, flag="train"):
        assert flag in ["train", "real_test"]

        self.flag = flag
        if self.flag == "train":
            self.parent = "../data/covid.train.csv"
        else:
            self.parent = "../data/covid.test.csv"

        self.data = np.array(pd.read_csv(self.parent, index_col="id"))

        mean = np.array([[0.99158741, 1.01613581, 29.4424964, 24.3230543, 89.68232153, 8.8944982,
                          31.70330702, 55.27715307, 16.6943422, 36.28317652, 10.35227291, 2.393285,
                          18.07468375, 13.07549797, 19.21332091, 64.63376875, 44.51947369, 16.30089251,
                          0.99456817, 1.01913485, 29.52930481, 24.4028752, 89.73673653, 8.86137053,
                          31.66465096, 55.19807457, 16.6354396, 36.17688627, 10.30459488, 2.38937155,
                          18.07166697, 13.06712689, 19.22845705, 64.73413948, 44.54412385, 16.36669509,
                          0.99798557, 1.02247204, 29.61080737, 24.47791333, 89.79022698, 8.83075888,
                          31.62427175, 55.11990285, 16.57828994, 36.07494076, 10.25747363, 2.38573542,
                          18.06763522, 13.0588279, 19.24328277, 64.83430666, 44.56844019, 16.43127986]]
                        )

        std = np.array([[0.42021767, 0.42355084, 9.09205432, 8.445186, 5.37903066, 3.40339685,
                         4.92798921, 4.52507901, 5.66742932, 6.67396976, 4.69783483, 1.0530748,
                         2.24833391, 1.62102731, 2.70610366, 6.23108433, 5.26481182, 7.63640817,
                         0.420036, 0.42345928, 9.08125818, 8.44158239, 5.36507297, 3.38868245,
                         4.91525702, 4.52404879, 5.65903713, 6.66298336, 4.69160961, 1.05304152,
                         2.24944718, 1.62496757, 2.70664656, 6.22546841, 5.24781508, 7.6261255,
                         0.42012739, 0.42362624, 9.06885756, 8.43548134, 5.35058291, 3.37709634,
                         4.90094961, 4.52360386, 5.65053667, 6.65393318, 4.68539462, 1.05295177,
                         2.24966453, 1.62828737, 2.70783708, 6.21893494, 5.23106126, 7.61794257]]
                       )

        if self.flag == "train":
            self.data[:, 40:] = (self.data[:, 40:] - mean) / std
        else:
            self.data[:, 40:] = (self.data[:, 40:] - mean[:, :-1]) / std[:, :-1]

    def __getitem__(self, index):
        item = self.data[index, :]
        if self.flag == "train":
            x = torch.FloatTensor(item[:-1])
            y = torch.tensor(item[-1], dtype=torch.float)
        else:
            x = torch.FloatTensor(item)
            y = torch.tensor(-1, dtype=torch.float)

        return x, y

    def __len__(self):
        return self.data.shape[0]
